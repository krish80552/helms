pipeline {
    agent any

    stages {

        stage('cloning') {
            steps {
                sh '''
                git clone https://github.com/krish80552/helms.git
                cd go-k8s/
                '''
            }
        }

        stage('Create_Infra') {
            environment {
                AWS_key = credentials ('Krishna1')
            }
            steps {
                sh '''
                cd helms/terraform
                aws configure
                AWS Access Key ID [None]: '$AWS_key_USR'
                AWS Secret Access Key [None]: '$AWS_key_PSW'
                Default region name [None]: us-west-2
                Default output format [None]: json
                
                terraform init
                terraform plan
                terraform apply -auto-approve
                '''
 }
        }


        stage('Loggin into EKS'){

            steps {
                sh '''
                aws eks --region $(terraform output -raw region) update-kubeconfig --name $(terraform output -raw cluster_name)
                eksctl get cluster
                kubectl get nodes
                '''
            }
        }
            stage('Docker image build and push into repo'){

            steps {
                sh '''
                cd helms/go-k8s/
                docker build -t httpimage:0.1 .
                docker login --username=80552 --password=powerStar27!
                docker tag httpimage:0.1 80552/http:0.1
                docker push 80552/http:0.1
                '''
            }
            }

            stage('Deploying the application into k8s'){

            steps {
                sh '''
                kubectl cluster-info
                kubectl create namespace vamsi
                helm install thota ./helm-chart  --namespace vamsi
                kubectl get service --url -n vamsi
                '''
            }
        }

    }
    post {
        always {
            cleanWs()
        }
    }

}
