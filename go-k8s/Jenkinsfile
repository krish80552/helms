pipeline {
    agent any

    stages {

        stage('cloning') {
            steps {
                sh '''
                git clone https://github.com/krish80552/helms.git
                cd go-k8s/
                '''
            }
        }

        stage('Create_Infra') {
            steps {
                withAWS(region: 'us-west-2' , credentials: 'Krish1') { 
                sh '''
                cd helms/terraform
                terraform init
                terraform plan
                terraform apply -auto-approve
                /usr/local/bin/aws eks --region $(terraform output region) update-kubeconfig --name $(terraform output cluster_name)
                '''
         }
     }
 }

        stage('Loggin into EKS'){

            steps {
                sh '''
               
                /usr/local/bin/eksctl get cluster
                /usr/local/bin/kubectl get nodes
                '''
            }
        }
            stage('Docker image build and push into repo'){

            steps {
                sh '''
                cd helms/go-k8s/
                docker build -t httpimage:0.1 .
                docker login --username=80552 --password=powerStar27!
                docker tag httpimage:0.1 80552/http:0.1
                docker push 80552/http:0.1
                '''
            }
            }

            stage('Deploying the application into k8s'){

            steps {
                withAWS(region: 'us-west-2' , credentials: 'Krish1') { 
                sh '''
                /usr/local/bin/kubectl cluster-info
                /usr/local/bin/kubectl create namespace vamsi
                cd helms/go-k8s
                /usr/local/bin/helm install thota ./helm-chart  -n vamsi
                /usr/local/bin/kubectl get service -n vamsi
            }
        }

    }
    

}
